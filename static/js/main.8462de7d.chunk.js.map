{"version":3,"sources":["components/UI/Card/Card.js","components/Expenses/ExpensesFilter/ExpensesFilter.js","components/Expenses/ExpenseDate/ExpenseDate.js","components/Expenses/ExpenseItem/ExpenseItem.js","components/Expenses/ExpensesList/ExpensesList.js","components/Chart/ChartBar/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart/ExpenseChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","currentDate","onChange","event","onChangeFilter","target","ExpenseDate","year","date","getFullYear","month","toLocaleString","day","console","log","ExpenseItem","title","amount","ExpensesList","expenses","length","map","item","id","ChartBar","barFillHeight","Math","round","maxValue","style","height","label","Chart","dataPoints","reduce","max","datePoint","dataPoint","EnxpenseChart","expense","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","items","filter","toString","data","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","action","onSubmit","preventDefault","expenseData","parseInt","Date","onSaveExpenseData","onClose","htmlFor","type","placeholder","min","step","onClick","NewExpense","isFormOpened","setIsFormOpened","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8462de7d.chunk.js","sourcesContent":["import \"./Card.css\";\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.currentDate} onChange={dropdownChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./ExpenseDate.css\";\n\nconst ExpenseDate = (props) => {\n  const year = props.date.getFullYear();\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n\n  return (\n    <div className=\"expense-date\">\n      {console.log(props)}\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import \"./ExpenseItem.css\";\nimport ExpenseDate from \"../ExpenseDate/ExpenseDate\";\nimport Card from \"../../UI/Card/Card\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import \"./ExpensesList.css\";\nimport ExpenseItem from \"../ExpenseItem/ExpenseItem\";\n\nconst ExpensesList = (props) => {\n  if (props.expenses.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n  }\n  return (\n    <ul className=\"expenses-list\">\n      {props.expenses.map((item) => {\n        return (\n          <ExpenseItem\n            key={item.id}\n            title={item.title}\n            amount={item.amount}\n            date={item.date}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.value > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  return (\n    <li className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div className=\"chart-bar__fill\" style={{ height: barFillHeight }} />\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </li>\n  );\n};\n\nexport default ChartBar;\n","import \"./Chart.css\";\nimport ChartBar from \"./ChartBar/ChartBar\";\n\nconst Chart = (props) => {\n  const maxValue = props.dataPoints.reduce((max, datePoint) => {\n    return max + datePoint.value;\n  }, 0);\n  return (\n    <ul className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          label={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={maxValue}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default Chart;\n","import \"./ExpenseChart.css\";\nimport Chart from \"../../Chart/Chart\";\n\nconst EnxpenseChart = (props) => {\n  const dataPoints = [\n    { label: \"Jen\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (let expense of props.expenses) {\n    console.log(expense);\n    const expenseMonth = expense.date.getMonth();\n    dataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={dataPoints} />;\n};\n\nexport default EnxpenseChart;\n","import \"./Expenses.css\";\nimport Card from \"../UI/Card/Card\";\nimport ExpensesFilter from \"./ExpensesFilter/ExpensesFilter\";\nimport { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList/ExpensesList\";\nimport ExpenseChart from \"./ExpenseChart/ExpenseChart\";\n\nconst Expenses = (props) => {\n  let [filteredYear, setFilteredYear] = useState(\"2020\");\n  const changeFilterHandler = (data) => {\n    setFilteredYear(data);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          onChangeFilter={changeFilterHandler}\n          currentDate={filteredYear}\n        />\n        <ExpenseChart expenses={filteredExpenses} />\n        <ExpensesList expenses={filteredExpenses} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: parseInt(enteredAmount),\n      date: new Date(enteredDate),\n    };\n    props.onSaveExpenseData(expenseData);\n    props.onClose();\n  };\n\n  return (\n    <form action=\"post\" onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"title-field\">Title</label>\n          <input\n            type=\"text\"\n            id=\"title-field\"\n            placeholder=\"Title\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"amount-field\">Amount</label>\n          <input\n            type=\"number\"\n            id=\"amount-field\"\n            placeholder=\"Amount\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"date-field\">Date</label>\n          <input\n            type=\"date\"\n            id=\"date-field\"\n            placeholder=\"Date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onClose}>\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm/ExpenseForm\";\nimport { useState } from \"react\";\n\nconst NewExpense = (props) => {\n  let [isFormOpened, setIsFormOpened] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  const openHandler = () => {\n    setIsFormOpened(true);\n  };\n\n  const closeHandler = () => {\n    setIsFormOpened(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isFormOpened && <button onClick={openHandler}>Add New Expense</button>}\n      {isFormOpened && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onClose={closeHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { useState } from \"react\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"React.js course\",\n    amount: 20,\n    date: new Date(2021, 9, 4),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  let [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expenseData) => {\n    setExpenses((prevExpenses) => {\n      return [expenseData, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}